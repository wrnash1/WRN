def pm_update(
            psc_complete,
            psc_total,
            psc_notes,
            neat_complete,
            neat_total,
            neat_notes,
            fiber_Complete,
            fiber_total,
            fiber_notes,
            om96_complete,
            om96_total,
            om96_notes,
            kpi_Nat_Complete,
            kpi_Nat_total,
            kpi_Nat_notes,
            E_10G_BH_A_Complete,
            E_10G_BH_A_total,
            E_10G_BH_A_notes,
            E_10G_BH_B_Complete,
            E_10G_BH_B_total,
            E_10G_BH_B_notes,
            consumption_Complete,
            consumption_total,
            consumption_notes,
            fiber_loops_Complete,
            fiber_loops_total,
            fiber_loops_notes,
            ER_Uplinks_Complete,
            ER_Uplinks_total,
            ER_Uplinks_notes,
            IHR_Complete,
            IHR_total,
            IHR_notes,
            P_5G_CRANS_total,
            P_5G_CRANS_notes,
            P_5G_consumption_Complete,
            P_5G_consumption_total,
            P_5G_consumption_notes,
            P_5G_Circuits_Complete,
            P_5G_Circuits_total,
            P_5G_Circuits_notes,
            target_Date_complete,
            target_Date_notes,
            MPLS_75_Complete,
            MPLS_75_total,
            MPLS_75_notes,
            MPLS_90_Complete,
            MPLS_90_total,
            MPLS_90_Notes,
            Current_Complete_complete,
            Current_Complete_notes,
            e_Line_P_total,
            e_Line_P_notes,
            e_5g_P_total,
            e_5g_P_notes,
            issue1,
            issue2,
            issue3,
            issue4,
            issue5,
            issue6):
    conn = sqlite3.connect('verizon.db')
    c = conn.cursor()
    c.execute("UPDATE INTO market VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", 
            (psc_complete,
            psc_total,
            psc_notes,
            neat_complete,
            neat_total,
            neat_notes,
            fiber_Complete,
            fiber_total,
            fiber_notes,
            om96_complete,
            om96_total,
            om96_notes,
            kpi_Nat_Complete,
            kpi_Nat_total,
            kpi_Nat_notes,
            E_10G_BH_A_Complete,
            E_10G_BH_A_total,
            E_10G_BH_A_notes,
            E_10G_BH_B_Complete,
            E_10G_BH_B_total,
            E_10G_BH_B_notes,
            consumption_Complete,
            consumption_total,
            consumption_notes,
            fiber_loops_Complete,
            fiber_loops_total,
            fiber_loops_notes,
            ER_Uplinks_Complete,
            ER_Uplinks_total,
            ER_Uplinks_notes,
            IHR_Complete,
            IHR_total,
            IHR_notes,
            P_5G_CRANS_total,
            P_5G_CRANS_notes,
            P_5G_consumption_Complete,
            P_5G_consumption_total,
            P_5G_consumption_notes,
            P_5G_Circuits_Complete,
            P_5G_Circuits_total,
            P_5G_Circuits_notes,
            target_Date_complete,
            target_Date_notes,
            MPLS_75_Complete,
            MPLS_75_total,
            MPLS_75_notes,
            MPLS_90_Complete,
            MPLS_90_total,
            MPLS_90_Notes,
            Current_Complete_complete,
            Current_Complete_notes,
            e_Line_P_total,
            e_Line_P_notes,
            e_5g_P_total,
            e_5g_P_notes,
            issue1,
            issue2,
            issue3,
            issue4,
            issue5,
            issue6))

    conn.commit()
    conn.close()

def show_all():
    conn = sqlite3.connect('verizon.db')
    c = conn.cursor()
    #Query the Database
    c.execute("SELECT rowid, * FROM market")
    items = c.fetchall()

def submit():
    #need to add all values into the database
    c.execute("INSERT INTO market VALUES('psc_complete', )")
    
def create_database
    conn = sqlite3.connect('PM_database.db')
    c = conn.cursor()
    #create a table
    c.execute("""CREATE TABLE market (
            psc_complete NUMERIC,
            psc_total NUMERIC,
            psc_notes TEXT,
            neat_complete NUMERIC,
            neat_total NUMERIC,
            neat_notes TEXT,
            fiber_Complete NUMERIC,
            fiber_total NUMERIC,
            fiber_notes TEXT,
            om96_complete NUMERIC,
            om96_total NUMERIC,
            om96_notes TEXT,
            kpi_Nat_Complete NUMERIC,
            kpi_Nat_total NUMERIC,
            kpi_Nat_notes TEXT,
            E_10G_BH_A_Complete NUMERIC,
            E_10G_BH_A_total NUMERIC,
            E_10G_BH_A_notes TEXT,
            E_10G_BH_B_Complete NUMERIC,
            E_10G_BH_B_total NUMERIC,
            E_10G_BH_B_notes TEXT,
            consumption_Complete NUMERIC,
            consumption_total NUMERIC,
            consumption_notes TEXT,
            fiber_loops_Complete,
            fiber_loops_total NUMERIC,
            fiber_loops_notes TEXT,
            ER_Uplinks_Complete NUMERIC,
            ER_Uplinks_total NUMERIC,
            ER_Uplinks_notes TEXT,
            IHR_Complete NUMERIC,
            IHR_total NUMERIC,
            IHR_notes TEXT,
            P_5G_CRANS_total NUMERIC,
            P_5G_CRANS_notes TEXT,
            P_5G_consumption_Complete NUMERIC,
            P_5G_consumption_total NUMERIC,
            P_5G_consumption_notes TEXT,
            P_5G_Circuits_Complete NUMERIC,
            P_5G_Circuits_total NUMERIC,
            P_5G_Circuits_notes TEXT,
            target_Date_complete TEXT,
            target_Date_notes TEXT,
            MPLS_75_Complete NUMERIC,
            MPLS_75_total NUMERIC,
            MPLS_75_notes TEXT,
            MPLS_90_Complete NUMERIC,
            MPLS_90_total NUMERIC,
            MPLS_90_Notes TEXT,
            Current_Complete_complete NUMERIC,
            Current_Complete_notes TEXT,
            e_Line_P_total NUMERIC,
            e_Line_P_notes TEXT,
            e_5g_P_total NUMERIC,
            e_5g_P_notes TEXT,
            issue1 TEXT,
            issue2 TEXT,
            issue3 TEXT,
            issue4 TEXT,
            issue5 TEXT,
            issue6 TEXT
    )""")

    #write data to database
    conn.commit()

    #Close the database connection
    conn.close()
